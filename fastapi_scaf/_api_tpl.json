{
    "app_api_vn_tpl.py": "import traceback\n\nfrom fastapi import APIRouter, Depends\n\nfrom app.api.response import Response\nfrom app.business.tpl import (\n    GetTplBiz,\n)\nfrom app.initializer import g\nfrom app.middleware.auth import JWTUser, get_current_user\n\ntpl_router = APIRouter()\n\n\n@tpl_router.get(\"/tpl/{tpl_id}\", summary=\"tpl\u8be6\u60c5\")\nasync def get(\n        tpl_id: int,\n        current_user: JWTUser = Depends(get_current_user),\n):\n    try:\n        tpl_biz = GetTplBiz(tpl_id=tpl_id)\n        data = await tpl_biz.get()\n    except Exception as e:\n        g.logger.error(traceback.format_exc())\n        return Response.failure(msg=\"tpl\u8be6\u60c5\u5931\u8d25\", error=e)\n    return Response.success(data=data)\n",
    "app_business_tpl.py": "from app.business.base import BaseBiz\nfrom app.datatype.tpl import (\n    GetTplReq,\n)\n\n\nclass GetTplBiz(GetTplReq, BaseBiz):\n\n    async def get(self):\n        pass\n",
    "app_datatype_tpl.py": "from sqlmodel import SQLModel, Field\n\n\nclass Tpl(SQLModel, table=True):\n    __tablename__ = \"tpl\"\n\n    id: int = Field(default=None, primary_key=True)\n    name: str = Field(default=None)\n\n\nclass GetTplReq(SQLModel):\n    tpl_id: int\n\n    @property\n    def fields(self):\n        return [\n            \"id\",\n            \"name\",\n        ]\n"
}